#!/bin/sh 
. ../../program_error.sh
. ../cannot_run.sh

# This is a test file to run the pairwise decomposition

if [ ! -x $AMBERHOME/bin/sander ]; then
   echo "This test requires sander and can only be run with Amber12 installed."
   exit 0
fi

if [ -z "$AMBERHOME" ]; then
   echo "Error: AMBERHOME must be set!"
   exit 1
fi 
# Define executable
if [ -z "$DO_PARALLEL" ]; then
   EXE=$AMBERHOME/bin/MMPBSA.py
else
   if [ `$DO_PARALLEL ../../numprocs` -gt 2 ]; then
      echo "Cannot have more than 2 processors for this test."
      exit 0
   fi
   EXE=$AMBERHOME/bin/MMPBSA.py.MPI
fi

test -x $EXE || cannot_run $EXE

# Write input file
cat > mmpbsa.in << EOF
MMPBSA comprehensive test
&general
  startframe=50, endframe=54,
  entropy=1, keep_files=0, debug_printlevel=2,
/
&gb
  igb=5, saltcon=0.15,
/
&pb
  istrng=0.15,
/
&nmode
  maxcyc=50000, nmode_istrng=0.15,
/
&decomp
  idecomp=1, print_res="1-6", dec_verbose=3,
  csv_format=0,
/
EOF

# Execute the program with decomp first
$DO_PARALLEL $EXE -O -i mmpbsa.in -sp complex_solvated.prmtop -cp complex.prmtop  \
                  -rp receptor.prmtop -lp ligand.prmtop -y complex_solvated.mdcrd \
                  -yr receptor_solvated.mdcrd -yl ligand_solvated.mdcrd           \
                  -srp receptor_solvated.prmtop -slp ligand_solvated.prmtop       \
                  -o FINAL_RESULTS_MMPBSA_1.dat > mmpbsa.out 2>&1 || error

cat > mmpbsa.in << EOF
MMPBSA comprehensive test
&general
  startframe=50, endframe=54,
  entropy=1, keep_files=1,
  debug_printlevel=2,
/
&gb
  igb=5, saltcon=0.15,
/
&pb
  istrng=0.15,
/
&nmode
  maxcyc=50000, nmode_istrng=0.15,
/
&alanine_scanning
/
&decomp
   idecomp=3, print_res="1-6", dec_verbose=3,
/
EOF

# Execute the program with alanine scanning second and decomp
$DO_PARALLEL $EXE -O -i mmpbsa.in -sp complex_solvated.prmtop -cp complex.prmtop  \
                  -rp receptor.prmtop -lp ligand.prmtop -y complex_solvated.mdcrd \
                  -yr receptor_solvated.mdcrd -yl ligand_solvated.mdcrd           \
                  -srp receptor_solvated.prmtop -slp ligand_solvated.prmtop       \
                  -mc complex_mutant.prmtop -mr receptor_mutant.prmtop            \
                  -o FINAL_RESULTS_MMPBSA_2.dat -do FINAL_DECOMP_MMPBSA_2.csv >> mmpbsa.out 2>&1 || error

# Due to the limited precision of mdcrd files, the ridiculousness of the test system, 
# (ALA GLU ALA ALA ALA LYS ALA binding to another dipeptide or something), the alanine
# scanning results can vary a *lot* from system to system, so introduce a far more
# relaxed comparison here. We're mostly just checking to make sure that we get
# numbers in this test and that mixing and matching all calculation types doesn't
# break stuff.

# Get rid of the commas in the CSV file so we can compare them with some flexibility
sed -i -e "s@,@ @g" FINAL_DECOMP_MMPBSA_2.csv

../../dacdif -a 6.0 FINAL_RESULTS_MMPBSA_1.dat.save FINAL_RESULTS_MMPBSA_1.dat
../../dacdif -a 6.0 FINAL_RESULTS_MMPBSA_2.dat.save FINAL_RESULTS_MMPBSA_2.dat
../../dacdif -a 6.0 FINAL_DECOMP_MMPBSA.dat.save FINAL_DECOMP_MMPBSA.dat
../../dacdif -a 6.0 FINAL_DECOMP_MMPBSA_2.csv.save FINAL_DECOMP_MMPBSA_2.csv

if [ -z "$DO_PARALLEL" ]; then
   # Test our rewriting of output capabilities here
   $DO_PARALLEL $EXE -rewrite-output -o FINAL_RESULTS_MMPBSA_2.dat >> mmpbsa.out 2>&1 || error

   ../../dacdif -a 6.0 FINAL_RESULTS_MMPBSA_2.dat.save FINAL_RESULTS_MMPBSA_2.dat
fi

$EXE --clean 2>&1 > /dev/null

rm -f mmpbsa.in mmpbsa.out FINAL_DECOMP_MMPBSA_2.csv-e FINAL_DECOMP_MMPBSA.dat
