#                                               -*- Autoconf -*-
# Process this file with autoconf to produce a configure script.

AC_PREREQ(2.59)
AC_INIT([MTK++], [0.2.0], [martin.b.peters@gmail.com], [MTKpp])

AM_INIT_AUTOMAKE
dnl -- To switch off automake warning's using automake-1.10 with older Makefile.am's use
dnl -- AUTOMAKE_OPTIONS = -Wno-portability
dnl -- To switch them off globally, use
dnl -- AM_INIT_AUTOMAKE([-Wno-portability])

dnl Qt configure
m4_include([scripts/config/qt.m4])

AC_CONFIG_SRCDIR([src/Molecule/collection.cpp])
AM_CONFIG_HEADER([config.h])

AM_MAINTAINER_MODE

AC_LANG(C++)

# Checks for programs.
AC_PROG_CXX
AC_PROG_CC
AC_PATH_PROG(SWIG, swig)
AC_PATH_PROG(PYTHON, python)

dnl libtool
dnl You can set the shared library version in src/Makefile.am
dnl AC_DISABLE_SHARED
AM_PROG_LIBTOOL
AC_SUBST(LIBTOOL_DEPS)

dnl Reset CXXFLAGS
dnl CXXFLAGS=

LIBDIR=$LIBDIR
AC_SUBST(LIBDIR)

FLIBS=$FLIBS
AC_SUBST(FLIBS)

LIBS=$LIBS

dnl ----------------------------------------------------------------------------
dnl              INTEL MATH KERNEL LIBRARY (MKL) (www.intel.com)
dnl ----------------------------------------------------------------------------
bMKL1=no
MKL_LDFLAGS=
AC_ARG_WITH(mkl_dir,
        [AS_HELP_STRING([--with-mkl-dir=DIR],[Use MKL in the specified directory. MKL libraries
        will be found in DIR/lib/32, DIR/lib/64 or DIR/lib/em64t, as appropriate.])],
        [if test -n "${with_mkl_dir}"; then
           case `uname -s` in
           *Darwin*)
              osx_version=`/usr/bin/sw_vers -productVersion | awk '{print $1}'`
              case "${osx_version}" in
              *10\.6*)
                 MKL_LDFLAGS="-L${with_mkl_dir}/lib/em64t" ;;
              *)
                 MKL_LDFLAGS="-L${with_mkl_dir}/lib/32" ;;
              esac
              ;;
           *)
              case `uname -m` in
              *em64t*) MKL_LDFLAGS="-L${with_mkl_dir}/lib/em64t" ;;
              *x86_64*) MKL_LDFLAGS="-L${with_mkl_dir}/lib/em64t" ;;
              *ia64*) MKL_LDFLAGS="-L${with_mkl_dir}/lib/64" ;;
              *) MKL_LDFLAGS="-L${with_mkl_dir}/lib/32" ;;
              esac
              ;;
           esac
#          MKL_LDFLAGS="-L${with_mkl_dir}/lib/32 -L${with_mkl_dir}/lib/64";
#          MKL_LDFLAGS="-L${with_mkl_dir}";
           bMKL1=yes;
         else
            MKL_LDFLAGS="";
         fi
        ],
        [MKL_LDFLAGS="";]
)

bMKL2=no
MKL_LIBS=
AC_ARG_WITH(mkl_libs, [AS_HELP_STRING([--with-mkl-libs=LIB],
  [use MKL libraries LIB, e.g. -lmkl_p4 -lmkl_lapack -lguide -lpthread])])
case $with_mkl_libs in
  yes | "") ;;
  no) mkl_ok=disabled ;;
  *) MKL_LIBS="$with_mkl_libs" ; bMKL2=yes ;;
esac

dnl CHECK MKL
if test "$bMKL1" = "yes"; then
  if test "$bMKL2" = "yes"; then
   AC_DEFINE([HAVE_MKL], [1], [Define if you have MKL library.])
   LIBS="$MKL_LIBS $LIBS"
   LDFLAGS="$MKL_LDFLAGS $LDFLAGS"
   CPPFLAGS="-I${with_mkl_dir}/include $CPPFLAGS"
  else
   AC_MSG_RESULT()
   AC_MSG_RESULT( Please provide MKL Flags )
   AC_MSG_RESULT( e.g. -lmkl_p4 -lmkl_lapack -lguide -lpthread)
   AC_MSG_ERROR( aborted )
  fi
fi

dnl ----------------------------------------------------------------------------
dnl                         BOOST (www.boost.org)
dnl ----------------------------------------------------------------------------
boost_inc=
AC_ARG_WITH(boost,
        [AS_HELP_STRING([--with-boost=DIR],[Use the Boost headers in the specified directory])],
        [if test -n ${with_boost}; then
            boost_inc=${with_boost};
            CXXFLAGS=$CXXFLAGS" -DNDEBUG"
         else
            boost_inc="";
         fi
        ],
        [boost_inc="";]
)
AC_SUBST(boost_inc)
dnl
dnl CHECK BOOST
dnl
if test "$boost_inc" == ""; then
      src_dir=`(cd $srcdir; pwd)`
dnl      boost_inc=$src_dir/lib/boost.1.33.0

      boost_inc=$src_dir/lib/boost_1_38_0

      CXXFLAGS=$CXXFLAGS" -DNDEBUG"
      AC_MSG_RESULT()
      AC_MSG_RESULT( Using Boost (v1_38_0) provided with MTK++ )
      AC_MSG_RESULT()
else
  # Figure out which version of Boost we are using
  AC_MSG_CHECKING([Boost version])

  BOOST_VER=`grep 'define.*BOOST_VERSION\W' $boost_inc/boost/version.hpp | perl -p -e 's/\D//g'`

  case "${BOOST_VER}" in
    1038*)
      BOOST_MAJOR="1"
      BOOST_MINOR="38"
    ;;
    *)
      AC_MSG_ERROR([*** Don't know how to handle this Boost major/minor version])
    ;;
  esac
  AC_MSG_RESULT([$BOOST_MAJOR-$BOOST_MINOR])
fi

dnl ----------------------------------------------------------------------------
dnl                         LOG4CXX (http://logging.apache.org/log4cxx)
dnl ----------------------------------------------------------------------------
log4cxx_inc=
AC_ARG_WITH(log4cxx,
        [AS_HELP_STRING([--with-log4cxx=DIR],[Use the log4cxx installation in the specified directory])],
        [if test -n ${with_log4cxx}; then
            log4cxx_inc=${with_log4cxx};
            CXXFLAGS=$CXXFLAGS" -DNDEBUG "
         else
            log4cxx_inc="";
         fi
        ],
        [log4cxxt_inc="";]
)
AC_SUBST(log4cxx_inc)


dnl CHECK LOG4CXX
if test "$log4cxx_inc" == ""; then
    AC_MSG_RESULT()
    AC_MSG_RESULT( Cannot find log4cxx, using basic logger )
    AC_MSG_RESULT()

    test_log4cxx="no";
    AM_CONDITIONAL(USE_LOG4CXX, test "$test_log4cxx" = "yes")
    AC_DEFINE([USE_LOG4CXX], [0], [Define Log4cxx flag])
else
    CXXFLAGS=$CXXFLAGS" -DUSE_LOG4CXX"
    test_log4cxx="yes";
    AM_CONDITIONAL(USE_LOG4CXX, test "$test_log4cxx" = "yes")
    AC_DEFINE([USE_LOG4CXX], [1], [Define Log4cxx flag])
fi

dnl ----------------------------------------------
dnl                     Qt
dnl
dnl  scripts/config/qt.m4
dnl ----------------------------------------------
CHECK_QT

dnl ----------------------------------------------------------------------------
dnl                        XERCES-C (http://xml.apache.org)
dnl ----------------------------------------------------------------------------
xerces_path=
AC_ARG_WITH(xerces,
        [AS_HELP_STRING([--with-xerces=DIR],[Use the Xerces-C installation in the specified directory])],
        [if test -n ${with_xerces}; then
            xerces_path=${with_xerces};
            XERCES_SUPPORT=true
            test_xerces="yes"
         else
            xerces_path="";
            XERCES_SUPPORT=false
            test_xerces="no"
         fi
        ],
        [xerces_path=""; 
         XERCES_SUPPORT=false
         test_xerces="no"
        ]
)

dnl ----------------------------------------------------------------------------
dnl         Pick Qt, XERCES-C or tinyxml for xml parsing
dnl ----------------------------------------------------------------------------
AM_CONDITIONAL(USE_QT, test "$test_qt" = "yes")
AM_CONDITIONAL(USE_XERCES, test "$test_xerces" = "yes")

if test "$test_qt" = "yes"; then
  AC_DEFINE([USE_QT], [1], [Define QT flag])

  CFLAGS=$CFLAGS" "$QT_DEFINES
  CXXFLAGS=$CXXFLAGS" "$QT_DEFINES
  defines_string=$defines_string$QT_DEFINES

elif test "$test_xerces" = "yes"; then
   if test "$xerces_path" == ""; then
     AC_MSG_RESULT()
     AC_MSG_RESULT( Cannot find xerces )
     AC_MSG_RESULT()
     AC_MSG_RESULT( Please provide a path to the xerces library )
     AC_MSG_RESULT()
     AC_MSG_ERROR( aborted )
  fi

  AC_SUBST(xerces_path)
  AC_DEFINE([USE_XERCES], [1], [Define XERCES flag])
  CFLAGS=$CFLAGS" -DUSE_XERCES"
  CXXFLAGS=$CXXFLAGS" -DUSE_XERCES"
  defines_string=$defines_string" -DUSE_XERCES"
else
  AC_DEFINE([USE_TINYXML], [1], [Define TINYXML flag])
  CFLAGS=$CFLAGS" -DUSE_TINYXML"
  CXXFLAGS=$CXXFLAGS" -DUSE_TINYXML -DTIXML_USE_STL"
  defines_string=$defines_string" -DUSE_TINYXML -DTIXML_USE_STL"

  AC_MSG_RESULT()
  AC_MSG_RESULT( Using TinyXML provided with MTK++ )
  AC_MSG_RESULT()
fi

dnl ----------------------------------------------------------------------------
dnl                         DOXYGEN (www.doxygen.org)
dnl ----------------------------------------------------------------------------
html_doc=no
AC_ARG_ENABLE(doxygen,
[AS_HELP_STRING([--enable-doxygen],[build library documentation using doxygen])],
        html_doc=yes
)

AC_CHECK_PROG(doxygen_ok, doxygen, yes, no)
AC_CHECK_PROG(latex_ok, latex, yes, no)
AC_CHECK_PROG(dvips_ok, dvips, yes, no)
AC_CHECK_PROG(gs_ok, gs, yes, no)
AC_CHECK_PROG(dot_ok, dot, yes, no)

if test "$html_doc" != no; then
  if test "$doxygen_ok" != yes; then
    echo " doxygen-enabled: However, doxygen cannot be found."
    echo " Take a look at http://www.doxygen.org/"
    html_doc=no
  fi
  if test "$latex_ok" != yes; then
    echo " doxygen-enabled: However, LaTeX cannot be found."
    html_doc=no
  fi
  if test "$dvips_ok" != yes; then
    echo " doxygen-enabled: However, dvips cannot be found."
    html_doc=no
  fi
  if test "$gs_ok" != yes; then
    echo " doxygen-enabled: However, gs cannot be found."
    html_doc=no
  fi
fi
AM_CONDITIONAL([DOC_ON], [test "$html_doc" = yes])
AM_CONDITIONAL([GOT_DOT], [test "$dot_ok" = yes])

dnl ----------------------------------------------------------------------------
dnl                         DOCUMENTATION DIRECTORY
dnl ----------------------------------------------------------------------------
AC_ARG_WITH(docdir,
        [AS_HELP_STRING([--with-docdir=DIR], [set documentation directory to DIR])],
        [DOC_DIR="$withval"], [DOC_DIR=""])
if test "x$DOC_DIR" != x; then
        docdir="$DOC_DIR"
else
        docdir="${prefix}/doc"
fi
AC_SUBST(docdir)

dnl ----------------------------------------------
dnl                  DEBUG
dnl ----------------------------------------------
debug=no
AC_ARG_ENABLE(debug,
[AS_HELP_STRING([--enable-debug],[Print debug messages])],
        debug=yes
)

if test yes != "$debug"; then
dnl CXXFLAGS="$CXXFLAGS -O3"
    debug=no
    debug="Off "
else
    AC_DEFINE([DEBUG], [1], [Define DEBUG flag])
    CXXFLAGS="$CXXFLAGS -g -pg -DDEBUG"
    defines_string=$defines_string"-DDEBUG "
    debug="On "
fi

dnl ----------------------------------------------------------------------------
dnl                                 TESTS
dnl ----------------------------------------------------------------------------

# Check for diff program
AC_CHECK_PROG([diff_ok], [diff], [yes], [no])
AM_CONDITIONAL([DIFFTOOL], [test "x$diff_ok" = xyes])

dnl ----------------------------------------------
dnl                  C99 COMPLIANT
dnl ----------------------------------------------
AC_PROG_CC_STDC
c99_ok=no
if test no == "$ac_cv_prog_cc_stdc"; then
dnl c99_ok="no, using unsigned long, and maximum number of atoms is 1000"
    c99_ok="no"
else
    AC_DEFINE([C99_OK], [1], [Define C99 flag])
    CXXFLAGS=$CXXFLAGS" -DC99_OK"
    defines_string=$defines_string"-DC99_OK "
dnl c99_ok="yes, using unsigned long long, and maximum number of atoms is 100000"
    c99_ok="yes"
fi

dnl ----------------------------------------------------------------------------
dnl                                  HOSTS
dnl ----------------------------------------------------------------------------


# now with all of the initial setup out of the way, we now need to figure out which compilers
# are available/supported on each platform
case "${host}" in
    *-*-linux*)      platform=LINUX
        tmp_FC='ifort ifc pgf90 xlf90_r f90'
        tmp_CC='gcc'
        tmp_CXX='gcc'
        is_linux=yes
        AC_DEFINE([HOST_LINUX],[1],[DEFINE LINUX])
    ;;
    *-apple-darwin*) platform=MACINTOSH
        tmp_FC='f90 xlf90_r'
        tmp_CC='gcc'
        tmp_CXX='gcc'
        is_darwin=yes
        if test "${bMKL1}" = "no" -o "${bMKL2}" = "no" ; then
           APPLE_LDFLAGS="-framework Accelerate"
        else
           APPLE_LDFLAGS=""
        fi
        APPLE_LDFLAGS="$APPLE_LDFLAGS -static"
        APPLE_LIBS="-lz"
        LDFLAGS="$APPLE_LDFLAGS $LDFLAGS"
        LIBS="$APPLE_LIBS $LIBS"
        AC_DEFINE([HOST_DARWIN],[1], [DEFINE DARWIN])
    ;;
    *)              platform=UNKNOWN
        is_unknown=yes
        echo 'ERROR: this platform is not supported at this time!'
        exit  ;;
esac
AM_CONDITIONAL(IS_DARWIN, test "$is_darwin" = "yes")
AM_CONDITIONAL(IS_LINUX, test "$is_linux" = "yes")
AM_CONDITIONAL([DARWIN_ACCEL],[ test \( "$is_darwin" = "yes" \) -a \( "${bMKL1}" != "yes" -o "${bMKL2}" != "yes" \) ])

# add the platform to the defines string:
defines_string=$defines_string" -D"$platform" "

AC_SUBST(platform)
AC_SUBST(defines_string)

INCLUDES='-D@platform@'

# Checks for programs.
AC_PROG_CXX($tmp_CXX)
AC_PROG_CC($tmp_CC)

# to go on, figure out what our CPPFLAGS will be
case "${host}" in
    *-*-linux*)
           CXXcompiler_options='-O2 -fPIC'
           CFLAGS=$CXXcompiler_options
    ;;
    *-apple-darwin*)
           CXXcompiler_options='-O2 -fno-common'
           CFLAGS=$CXXcompiler_options
    ;;
esac

CXXFLAGS="$CXXFLAGS $CXXcompiler_options"
dnl CFLAGS=$CXXFLAGS

AC_SUBST([CXXLD], ['$(CXX)'])

# Checks for libraries.

# Checks for header files.
AC_HEADER_STDC
AC_HEADER_STAT
AC_HEADER_TIME
AC_CHECK_HEADERS([sys/time.h \
  stdlib.h \
  algorithm \
  cassert \
  cmath \
  complex \
  cstring \
  deque \
  fstream \
  limits \
  list \
  queue])

AC_CHECK_HEADERS([string], [], [],
  [[#ifdef HAVE_STRING
    # include <string>
    #endif
]])

ac_have_zlibh=no
ac_have_zlib=no
AC_CHECK_HEADERS([zlib.h], [ac_have_zlibh=yes], [ac_have_zlibh=no],
  [[
    #include "zlib.h"
]])

dnl if test $ac_have_zlibh = yes; then
dnl   AC_SEARCH_LIBS(gzopen, [z], [ac_have_zlib=yes], [ac_have_zlib=no])
dnl fi

if test $ac_have_zlibh = yes; then
  AC_DEFINE(HAVE_ZLIB, 1, [Define to 1 if ZLIB is available.])
  CFLAGS=$CFLAGS" -DHAVE_ZLIB"
  CXXFLAGS=$CXXFLAGS" -DHAVE_ZLIB"
  defines_string=$defines_string" -DHAVE_ZLIB"
  FLIBS=$FLIBS" -lz"
else
  AC_DEFINE(HAVE_ZLIB, 0, [Define to 0 if ZLIB is unavailable.])
fi

AC_MSG_CHECKING([if zlib should be used])
AC_MSG_RESULT($ac_have_zlibh)
dnl AC_MSG_RESULT($ac_have_zlib)

# Checks for typedefs, structures, and compiler characteristics.
AC_HEADER_STDBOOL
AC_C_CONST
AC_C_INLINE

dnl ----------------------------------------------
#          doc/Makefile \
#          doc/pics/Makefile \
#          doc/pics/MDLFormat/Makefile \
#          doc/pics/fragments/Makefile \
#          doc/pics/functionalize/Makefile \
#          doc/pics/hybridize/Makefile \
#          doc/pics/hydrophobic/Makefile \
#          doc/pics/ring/Makefile \
#          doc/Doxyfile \
#          doc/local/Makefile \
#          data/Makefile \
#          data/fragLib/Makefile \
#          data/metals/Makefile \
#          data/nmr/Makefile \
#          data/hybridize/Makefile \
#          data/ZAFF/Makefile \
#          data/nonStandardAAs/Makefile \
#          data/PAM/Makefile \
#          scripts/Makefile \
#          scripts/shell/Makefile \
#          examples/Makefile \
#          examples/capActiveSite/Makefile \
#          examples/frcmod2xml/Makefile \
#          examples/func/Makefile \
#          examples/hybrid/Makefile \
#          examples/MCPB/Makefile \
#          examples/MCPB/data/Makefile \
#          examples/mmE/Makefile \
#          examples/pdbSearcher/Makefile \
#          examples/prep2xml/Makefile \
#          examples/protonator/Makefile \
#          examples/sequenceAligner/Makefile \
#          examples/stats/Makefile \
#          examples/stats/pca1/Makefile \
#          examples/stdLib2Sdf/Makefile \
#          examples/superimposer/Makefile \

# Checks for library functions.
AC_FUNC_STRTOD
AC_CHECK_FUNCS([pow sqrt])
AC_OUTPUT(Makefile \
          src/Makefile \
          src/Log/Makefile \
          src/tinyxml/Makefile \
          src/Diagnostics/Makefile \
          src/Statistics/Makefile \
          src/Molecule/Makefile \
          src/Parsers/Makefile \
          src/MM/Makefile \
          src/GA/Makefile \
          src/Minimizers/Makefile \
          src/Graph/Makefile \
          src/Utils/Makefile \
          tests/Makefile \
          tools/Makefile)

dnl
dnl Exit Message
dnl

echo "
------------------------------------------------------------------------------
$PACKAGE-$VERSION package configuration:
------------------------------------------------------------------------------

Directories:
  - prefix ....... : ${prefix}
  - docdir ....... : ${docdir}
  - exec_prefix .. : ${exec_prefix}
  - includedir ... : ${includedir}
  - libdir ....... : ${libdir}

Switches:
  - debug ........ : ${debug}
  - html ......... : ${html_doc}

Documentation tools:
  - Doxygen ...... : ${doxygen_ok}
  - LaTeX ........ : ${latex_ok}
  - Dvips ........ : ${dvips_ok}
  - GhostScript .. : ${gs_ok}
  - Dot .......... : ${dot_ok}

Testing tools:
  - Diff ......... : ${diff_ok}

External libs:
  - MKL .......... : ${MKL_LDFLAGS}
  - BOOST ........ : ${boost_inc}
  - LOG4CXX ...... : ${log4cxx_inc}
  - XERCES ....... : ${xerces_path}
  - QT ........... : ${QTDIR}

Compiler/linker flags/libs/defs:
  - CPPFLAGS ..... : ${CPPFLAGS}
  - CC ........... : ${CC}
  - CFLAGS ....... : ${CFLAGS}
  - CXX .......... : ${CXX}
  - CXXFLAGS ..... : ${CXXFLAGS}
  - LDFLAGS ...... : ${LDFLAGS}
  - LIBS ......... : ${LIBS}
  - FLIBS ........ : ${FLIBS}
  - C99 OK ....... : ${c99_ok}
  - ZLIB ......... : ${ac_have_zlibh}

------------------------------------------------------------------------------
Now type 'make && make install' to build and install $PACKAGE-$VERSION package
------------------------------------------------------------------------------
"
dnl AC_MSG_RESULT()
dnl AC_MSG_RESULT()
dnl AC_MSG_RESULT( Your Makefiles have been created. If everything went OK: just type)
dnl AC_MSG_RESULT()
dnl AC_MSG_RESULT(    make)
dnl AC_MSG_RESULT()
dnl AC_MSG_RESULT( to build MTK++.)
dnl AC_MSG_RESULT()

